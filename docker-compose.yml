version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nexus-edge-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-gateway # or product-service if API Gateway is not used

  api-gateway:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nexus-edge-api-gateway
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: production
    depends_on:
      - product-service
      - cart-service
      - order-service
      - payment-service
      - user-service
      - search-service
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"] # Assuming a health endpoint
      interval: 30s
      timeout: 10s
      retries: 3

  product-service:
    build:
      context: ./backend/services/product-service
      dockerfile: Dockerfile
    container_name: nexus-edge-product-service
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  cart-service:
    build:
      context: ./backend/services/cart-service
      dockerfile: Dockerfile
    container_name: nexus-edge-cart-service
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  order-service:
    build:
      context: ./backend/services/order-service
      dockerfile: Dockerfile
    container_name: nexus-edge-order-service
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: production
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  payment-service:
    build:
      context: ./backend/services/payment-service
      dockerfile: Dockerfile
    container_name: nexus-edge-payment-service
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: production
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build:
      context: ./backend/services/user-service
      dockerfile: Dockerfile
    container_name: nexus-edge-user-service
    ports:
      - "3005:3005"
    environment:
      NODE_ENV: production
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  search-service:
    build:
      context: ./backend/services/search-service
      dockerfile: Dockerfile
    container_name: nexus-edge-search-service
    ports:
      - "3006:3006"
    environment:
      NODE_ENV: production
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.0-alpine
    container_name: nexus-edge-redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "INFO"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data: