worker_processes auto;

events {
    worker_connections 1024;
}

http {
    upstream api_gateway {
        server 127.0.0.1:8080; # Assuming API Gateway runs on localhost:8080
        # Add more API Gateway instances here for redundancy
    }

    server {
        listen 80;
        server_name your_domain.com; # Replace with your domain

        location / {
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optional: Health check endpoint for the load balancer itself
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1; # Only allow access from localhost
            deny all;
        }
    }

    # Example for direct microservice load balancing if no API Gateway
    # server {
    #     listen 8081;
    #     server_name microservice_domain.com;

    #     upstream product_service {
    #         server 127.0.0.1:3001;
    #         server 127.0.0.1:3002;
    #     }

    #     location / {
    #         proxy_pass http://product_service;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}